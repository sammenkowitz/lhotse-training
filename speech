# Shalom World

import lhotse, os, gzip, shutil
from lhotse import CutSet, Mfcc, Fbank
import lhotse.recipes
from lhotse.audio import Recording, RecordingSet
from lhotse.recipes.utils import manifests_exist, read_manifests_if_cached
from lhotse.supervision import AlignmentItem, SupervisionSegment, SupervisionSet

from tqdm.auto import tqdm
from pathlib import Path
from typing import Dict, List, Optional, Sequence, Tuple, Union

Pathlike = Union[Path, str]


def prepare_corpora(root_dir, dataset_parts, out_dir = None):
    
    '''
    :param annotation: jsonl
    :param audio: wav (or other audio)
    :param supervisiondir: location of (supervision=jsonl)
    :param recordingdir: location of (recording=jsonl, including path of cutaudio)
    '''
    
    # if out_dir == None:
        # supervisiondir = (dir of dir\\rootdir)
    
    root_dir = Path(root_dir) # (.strip) names of annotation and audio files carried over to out_dir
    output_dir = Path(output_dir)
    assert root_dir.is_dir(), f"No such directory: {root_dir}"
    assert output_dir.is_dir(), f"No such directory: {output_dir}"
    
    with open(annotation, 'r', encoding='utf-8') as annotation_data:
        
        with open(supervisiondir, 'w', encoding='utf-8') as prime_manifest:
            sub = 0
            for line in annotation_data:        
                line = line.split('\t')
                line[0] = line[0].split(' ')

                supervision = {}
                supervision['id'] = Path(annotation).stem + f"-cut_{sub}"
                supervision['recording_id'] = Path(audio).stem
                supervision['start'] = 0.0
                supervision['duration'] = float(line[0][1]) - float(line[0][0])
                supervision['channel'] = 0
                supervision['text'] = line[1]
                supervision['language'] = 'Arabic'
                supervision['speaker'] = line[0][2]

                prime_manifest.write(str(supervision))
                sub += 1
    
#    with open() as :
#        with open() as vice_manifest:
